apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-proxy
  namespace: kube-system
  labels:
    tier: node
    k8s-app: kube-proxy
spec:
  selector:
    matchLabels:
      tier: node
      k8s-app: kube-proxy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        tier: node
        k8s-app: kube-proxy
    spec:
      hostNetwork: true
      priorityClassName: system-node-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kube-proxy
      tolerations:
      - key: node-role.kubernetes.io/controller
        operator: Exists
      - key: node.kubernetes.io/not-ready
        operator: Exists
      %{~ for key in daemonset_tolerations ~}
      - key: ${key}
        operator: Exists
      %{~ endfor ~}
      containers:
      - name: kube-proxy
        image: ${kube_proxy_image}
        command:
        - kube-proxy
        - --cluster-cidr=${pod_cidr}
        - --hostname-override=$(NODE_NAME)
        - --kubeconfig=/etc/kubernetes/kubeconfig
        - --metrics-bind-address=0.0.0.0
        - --proxy-mode=ipvs
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        ports:
        - name: metrics
          containerPort: 10249
        - name: health
          containerPort: 10256
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10256
          initialDelaySeconds: 15
          timeoutSeconds: 15
        securityContext:
          privileged: true
        volumeMounts:
        - name: kubeconfig
          mountPath: /etc/kubernetes
          readOnly: true
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: etc-ssl
          mountPath: /etc/ssl/certs
          readOnly: true
        - name: etc-pki
          mountPath: /etc/pki
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
      volumes:
      - name: kubeconfig
        configMap:
          name: kubeconfig-in-cluster
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: etc-ssl
        hostPath:
          path: /etc/ssl/certs
      - name: etc-pki
        hostPath:
          path: /etc/pki
      # Access iptables concurrently
      - name: xtables-lock
        hostPath:
          type: FileOrCreate
          path: /run/xtables.lock
