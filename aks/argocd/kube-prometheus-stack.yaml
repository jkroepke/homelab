apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    # https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
    targetRevision: 41.4.1
    helm:
      releaseName: kube-prometheus-stack
      skipCrds: true
      fileParameters:
        - name: grafana.grafana\.ini.auth\.generic_oauth.client_secret
          path: secrets+literal://ref+azurekeyvault://aks-credentials/dexidp-grafana-client-secret
      # language=yaml
      values: |
        defaultRules:
          create: true
          rules:
            etcd: false
            kubeControllerManager: false
            kubeSchedulerAlerting: false
            kubeSchedulerRecording: false
        prometheus:
          prometheusSpec:
            scrapeInterval: 30s
            enableFeatures:
              - memory-snapshot-on-shutdown
              - new-service-discovery-manager
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: managed-csi
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
        prometheusOperator:
          prometheusConfigReloader:
            resources:
              requests:
                cpu: 0
                memory: 0
              limits:
                cpu: 0
                memory: 0
          admissionWebhooks:
            patch:
              enabled: false
            certManager:
              enabled: true
        
        grafana:
          testFramework:
            enabled: false
          env:
            GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "true"
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt
            hosts:
              - grafana.aks.jkroepke.de
            tls:
              - secretName: grafana-ingress-tls
                hosts:
                  - grafana.aks.jkroepke.de
          grafana.ini:
            server:
              root_url: https://grafana.aks.jkroepke.de
            auth:
              oauth_auto_login: true
            users:
              auto_assign_org_role: Admin
              disable_login_form: true
            auth.generic_oauth:
              enabled: true
              allow_sign_up: true
              name: login.aks.jkroepke.de
              client_id: grafana
              scopes: openid profile email
              auth_url: https://login.aks.jkroepke.de/dex/auth
              token_url: https://login.aks.jkroepke.de/dex/token
              api_url: https://login.aks.jkroepke.de/dex/userinfo
              use_pkce: true
        
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
              - name: 'default'
                orgId: 1
                folder: ''
                type: file
                disableDeletion: true
                editable: false
                options:
                  path: /var/lib/grafana/dashboards/default
          dashboards:
            default:
              cert-manager:
                gnetId: 11001
                revision: 1
                datasource: Prometheus
              nginx-ingress-exporter:
                gnetId: 9614
                revision: 1
                datasource: Prometheus
              node-exporter-full:
                gnetId: 1860
                revision: 27
                datasource: Prometheus
              kube-state-metrics-v2:
                gnetId: 13332
                revision: 12
                datasource: Prometheus
              prometheus-2.0-overview:
                gnetId: 3662
                revision: 2
                datasource: Prometheus
              cluster-monitoring-for-kubernetes:
                gnetId: 10000
                revision: 1
                datasource: Prometheus
              argocd:
                gnetId: 14584
                revision: 1
                datasource: Prometheus

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  destination:
    server: "https://kubernetes.default.svc"
    namespace: infra-prometheus
---
# ref: https://github.com/prometheus-operator/prometheus-operator/issues/4439#issuecomment-1030198014
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack-crd
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/prometheus-community/helm-charts.git
    path: charts/kube-prometheus-stack/crds/
    targetRevision: kube-prometheus-stack-40.5.0
    directory:
      recurse: true
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - Replace=true
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  destination:
    server: "https://kubernetes.default.svc"
    namespace: infra-prometheus
