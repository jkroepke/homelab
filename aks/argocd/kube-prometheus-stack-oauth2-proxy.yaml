apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack-oauth2-proxy
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: oauth2-proxy
    repoURL: https://oauth2-proxy.github.io/manifests
    # https://artifacthub.io/packages/helm/kured/kured
    targetRevision: 6.3.0
    helm:
      releaseName: oauth2-proxy
      fileParameters:
        - name: config.cookieSecret
          path: secrets+literal://ref+azurekeyvault://aks-credentials/oauth2-proxy-cookie-secret
        - name: config.clientSecret
          path: secrets+literal://ref+azurekeyvault://aks-credentials/dexidp-prometheus-client-secret
      # language=yaml
      values: |
        config:
          clientID: prometheus
            
        ingress:
          enabled: ture
          className: nginx
          path: /oauth2/
          pathType: Prefix
          hosts:
          - prometheus.aks.jkroepke.de
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt
          tls:
            - secretName: prometheus-ingress-tls
              hosts:
                - prometheus.aks.jkroepke.de
        extraArgs:
          code-challenge-method: S256
          provider: oidc
          provider-display-name: login.aks.jkroepke.de
          redirect-url: https://login.aks.jkroepke.de/oauth2/callback
          oidc-issuer-url: https://login.aks.jkroepke.de/dex
          upstream: http://127.0.0.1:9090/
          email-domain: "*"
          http-address: ":4180"

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 2
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  destination:
    server: "https://kubernetes.default.svc"
    namespace: infra-prometheus

