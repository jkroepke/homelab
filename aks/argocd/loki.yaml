apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: loki
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 3.3.0
    helm:
      releaseName: loki
      skipCrds: true
      fileParameters:
        - name: "loki.storage_config.azure.user_assigned_id"
          path: "kubectl://infra-loki/sa/loki/jsonpath={.metadata.annotations.azure\\\\.workload\\\\.identity/client-id}"
      #language=yaml
      values: |
        test:
          enabled: false        

        serviceAccount:
          create: false
          name: loki
        loki:            
          auth_enabled: false
          commonConfig:
            replication_factor: 1
          storage:
            type: "azure"
            bucketNames:
              chunks: chunks
              ruler: ruler
              admin: admin
          storage_config:
            azure:
              account_name: jokmspaks
              container_name: loki
              use_managed_identity: true
            boltdb_shipper:
              #active_index_directory: /data/loki/boltdb-shipper-active
              #cache_location: /data/loki/boltdb-shipper-cache
              cache_ttl: 24h
              shared_store: azure
            #filesystem:
            #  directory: /data/loki/chunk
          schemaConfig:
            configs:
            - from: 2022-01-11
              store: boltdb-shipper
              object_store: azure
              schema: v12
              index:
                prefix: loki_index_
                period: 24h
          podSecurityContext:
            runAsNonRoot: false
          structuredConfig:
            ruler:
              storage:
                azure:
                  account_name: jokmspaks
                  container_name: loki
                  use_managed_identity: true

            chunk_store_config:
              max_look_back_period: 672h
            
            table_manager:
              retention_deletes_enabled: true
              retention_period: 672h

        monitoring:
          dashboards:
            namespace: infra-prometheus
            labels:
              grafana_dashboard: "1"
          alerts:
            labels:
              release: kube-prometheus-stack
          rules:
            labels:
              release: kube-prometheus-stack
          serviceMonitor:
            labels:
              release: kube-prometheus-stack

          selfMonitoring:
            enabled: false
            grafanaAgent:
              installOperator: false
            lokiCanary:
              # https://github.com/grafana/loki/pull/7236
              enabled: false
          
        write:
          replicas: 1
          persistence:
            storageClass: jokmspaks
          podAnnotations:
            azure.workload.identity/inject-proxy-sidecar: "true"
        
        read:
          replicas: 1
          persistence:
            storageClass: jokmspaks
          podAnnotations:
            azure.workload.identity/inject-proxy-sidecar: "true"
            

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
    retry:
      limit: 2
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  destination:
    server: "https://kubernetes.default.svc"
    namespace: infra-loki
  ignoreDifferences:
    - group: apps
      kind: StatefulSet
      jsonPointers:
        - /spec/persistentVolumeClaimRetentionPolicy
