- name: Install dependencies for kubectl port-forward
  package:
    name: socat,conntrack,ipset
    state: present

- import_tasks: "../../aws/tasks/get-tags.yml"

# https://www.reddit.com/r/linuxadmin/comments/flzx5r/ansible_how_to_disable_swap/fl1uaoz?utm_source=share&utm_medium=web2x&context=3
- name: Disable swap for current session
  command: swapoff -a

- name: Disable swap permanently, persist reboots
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'

- name: Create directories
  file:
    state: directory
    path: "{{ item }}"
  loop:
    - /etc/cni/net.d
    - /etc/containerd/
    - /opt/cni/bin
    - /var/lib/kubelet
    - /var/lib/kube-proxy
    - /var/lib/kubernetes
    - /var/run/kubernetes

- name: Download kubernetes
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/{{ versions.kubernetes }}/bin/linux/amd64/{{ item }}"
    dest: /usr/local/bin/
    mode: 0755
  loop:
    - kubectl
    - kubelet
    - kube-proxy

- name: Download runc
  get_url:
    url: "https://github.com/opencontainers/runc/releases/download/{{ versions.runc }}/runc.amd64"
    dest: /usr/local/bin/runc
    mode: 0755

- name: Download crictl
  unarchive:
    src: https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ versions.crictl }}/crictl-{{ versions.crictl }}-linux-amd64.tar.gz
    dest: /usr/local/bin
    creates: /usr/local/bin/crictl
    remote_src: yes
    owner: root
    group: root
    mode: 0755

- name: Download containerd
  unarchive:
    src: https://github.com/containerd/containerd/releases/download/{{ versions.containerd }}/containerd-{{ versions.containerd | replace("v", "") }}-linux-amd64.tar.gz
    dest: /usr/local/bin/
    creates: /usr/local/bin/containerd
    remote_src: yes
    owner: root
    group: root
    mode: 0755
    extra_opts:
    - --strip-components=1
    - --wildcards
    - 'bin/*'

- name: Download cni plugins
  unarchive:
    src: https://github.com/containernetworking/plugins/releases/download/{{ versions.cni }}/cni-plugins-linux-amd64-{{ versions.cni }}.tgz
    dest: /opt/cni/bin/
    creates: /opt/cni/bin/loopback
    remote_src: yes
    owner: root
    group: root
    mode: 0755
    extra_opts:
    - --strip-components=1

- name: Copy files
  copy:
    src: "{{ item }}"
    dest: "/{{ item }}"
  loop:
    - etc/cni/net.d/99-loopback.conf
    - etc/containerd/config.toml
    - etc/systemd/system/containerd.service
  notify:
    - systemctl daemon-reload
    - systemctl restart containerd
    - systemctl restart kubelet
    - systemctl restart kube-proxy

- name: Copy certificates
  copy:
    src: "~/{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
  loop:
    - { src: ca.pem, dest: "/var/lib/kubernetes/" }
    - { src: "kube-proxy.kubeconfig", dest: "/var/lib/kube-proxy/kubeconfig" }
    - { src: "{{ private_dns_name }}.kubeconfig", dest: "/var/lib/kubelet/kubeconfig" }
    - { src: "{{ private_dns_name }}.pem", dest: "/var/lib/kubelet/" }
    - { src: "{{ private_dns_name }}-key.pem", dest: "/var/lib/kubelet/" }

- name: Copy templates
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
  loop:
    - etc/cni/net.d/10-bridge.conf
    - var/lib/kubelet/kubelet-config.yaml
    - var/lib/kube-proxy/kube-proxy-config.yaml
    - etc/systemd/system/kubelet.service
    - etc/systemd/system/kube-proxy.service
  notify:
    - systemctl daemon-reload
    - systemctl restart containerd
    - systemctl restart kubelet
    - systemctl restart kube-proxy

- meta: flush_handlers

- name: systemctl start
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - kubelet
    - kube-proxy
    - containerd
