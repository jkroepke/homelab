- name: download files
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubernetes_version }}/bin/linux/amd64/{{ item }}"
    dest: /usr/local/bin/
    mode: 0755
  loop:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
    - kubectl

- name: Create directories
  file:
    state: directory
    path: "{{ item }}"
  loop:
    - /etc/kubernetes/config
    - /etc/kubernetes/config/rbac
    - /var/lib/kubernetes/

- name: Copy files
  copy:
    src: "{{ item }}"
    dest: "/{{ item }}"
  loop:
    - etc/kubernetes/config/kube-scheduler.yaml
    - etc/kubernetes/config/rbac/kube-apiserver-to-kubelet.yaml

- name: Copy certificates
  copy:
    src: "~/{{ item }}"
    dest: "/var/lib/kubernetes/{{ item }}"
    remote_src: yes
  loop:
    - ca.pem
    - ca-key.pem
    - kubernetes-key.pem
    - kubernetes.pem
    - service-account-key.pem
    - service-account.pem
    - encryption-config.yaml
    - kube-scheduler.kubeconfig
    - kube-controller-manager.kubeconfig
  notify:
    - systemctl restart kube-apiserver

- name: Copy systemd service files
  template:
    src: etc/systemd/system/{{ item }}.service.j2
    dest: /etc/systemd/system/{{ item }}.service
  vars:
    etcd_members: "{{ groups.tag_controller_true }}"
  notify:
    - systemctl daemon-reload
    - "systemctl restart {{ item }}"
  loop:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- meta: flush_handlers

- name: systemctl start
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: Apply RBAC
  command: kubectl apply --kubeconfig ~/admin.kubeconfig -f /etc/kubernetes/config/rbac/
  run_once: true
  register: command_result
  changed_when: "' changed' in command_result.stdout"
